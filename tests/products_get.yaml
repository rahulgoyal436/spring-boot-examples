---

- name: "Successful API request"
  description: "This test scenario verifies that a successful API request returns a 200 status code and the expected data."
  steps:
  - request:
    url: "/products"
    method: "GET"
    headers:
      Content-Type: "application/json"
  - response:
    status_code: 200
    body:
      "$.products": [
        {
          "id": 1,
          "name": "Product 1",
          "price": 10.00,
          "quantity": 10
        },
        {
          "id": 2,
          "name": "Product 2",
          "price": 20.00,
          "quantity": 20
        },
        {
          "id": 3,
          "name": "Product 3",
          "price": 30.00,
          "quantity": 30
        }
      ]

- name: "API request with validation failure"
  description: "This test scenario verifies that an API request with validation errors returns a 400 status code and the expected error message."
  steps:
  - request:
    url: "/products"
    method: "POST"
    headers:
      Content-Type: "application/json"
    body:
      "name": "Product 1"
  - response:
    status_code: 400
    body:
      "errors": [
        {
          "field": "price",
          "message": "The price field is required."
        }
      ]

- name: "API request with edge case"
  description: "This test scenario verifies that an API request with a large payload returns a 200 status code and the expected data."
  steps:
  - request:
    url: "/products"
    method: "GET"
    headers:
      Content-Type: "application/json"
    body:
      [
        {
          "id": 1,
          "name": "Product 1",
          "price": 10.00,
          "quantity": 10
        },
        {
          "id": 2,
          "name": "Product 2",
          "price": 20.00,
          "quantity": 20
        },
        {
          "id": 3,
          "name": "Product 3",
          "price": 30.00,
          "quantity": 30
        },
        {
          "id": 4,
          "name": "Product 4",
          "price": 40.00,
          "quantity": 40
        },
        {
          "id": 5,
          "name": "Product 5",
          "price": 50.00,
          "quantity": 50
        },
        {
          "id": 6,
          "name": "Product 6",
          "price": 60.00,
          "quantity": 60
        },
        {
          "id": 7,
          "name": "Product 7",
          "price": 70.00,
          "quantity": 70
        },
        {
          "id": 8,
          "name": "Product 8",
          "price": 80.00,
          "quantity": 80
        },
        {
          "id": 9,
          "name": "Product 9",
          "price": 90.00,
          "quantity": 90
        },
        {
          "id": 10,
          "name": "Product 10",
          "price": 100.00,
          "quantity": 100
        }
      ]
  - response:
    status_code: 200
    body:
      "$.products": [
        {
          "id": 1,
          "name": "Product 1",
          "price": 10.00,
          "quantity": 10
        },
        {